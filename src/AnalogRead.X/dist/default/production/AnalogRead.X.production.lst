

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Mar 24 22:17:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	12F1822
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11  0000                     
    12                           ; Version 2.20
    13                           ; Generated 12/02/2020 GMT
    14                           ; 
    15                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC12F1822 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     	;# 
    47  0001                     	;# 
    48  0002                     	;# 
    49  0003                     	;# 
    50  0004                     	;# 
    51  0005                     	;# 
    52  0006                     	;# 
    53  0007                     	;# 
    54  0008                     	;# 
    55  0009                     	;# 
    56  000A                     	;# 
    57  000B                     	;# 
    58  000C                     	;# 
    59  0011                     	;# 
    60  0012                     	;# 
    61  0015                     	;# 
    62  0016                     	;# 
    63  0016                     	;# 
    64  0017                     	;# 
    65  0018                     	;# 
    66  0019                     	;# 
    67  001A                     	;# 
    68  001B                     	;# 
    69  001C                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  008C                     	;# 
    73  0091                     	;# 
    74  0092                     	;# 
    75  0095                     	;# 
    76  0096                     	;# 
    77  0097                     	;# 
    78  0098                     	;# 
    79  0099                     	;# 
    80  009A                     	;# 
    81  009B                     	;# 
    82  009B                     	;# 
    83  009C                     	;# 
    84  009D                     	;# 
    85  009E                     	;# 
    86  010C                     	;# 
    87  0111                     	;# 
    88  0112                     	;# 
    89  0115                     	;# 
    90  0116                     	;# 
    91  0117                     	;# 
    92  0118                     	;# 
    93  0119                     	;# 
    94  011A                     	;# 
    95  011B                     	;# 
    96  011D                     	;# 
    97  011D                     	;# 
    98  018C                     	;# 
    99  0191                     	;# 
   100  0191                     	;# 
   101  0192                     	;# 
   102  0193                     	;# 
   103  0193                     	;# 
   104  0193                     	;# 
   105  0194                     	;# 
   106  0195                     	;# 
   107  0196                     	;# 
   108  0199                     	;# 
   109  019A                     	;# 
   110  019B                     	;# 
   111  019B                     	;# 
   112  019B                     	;# 
   113  019B                     	;# 
   114  019C                     	;# 
   115  019C                     	;# 
   116  019D                     	;# 
   117  019E                     	;# 
   118  019F                     	;# 
   119  020C                     	;# 
   120  0211                     	;# 
   121  0211                     	;# 
   122  0212                     	;# 
   123  0212                     	;# 
   124  0213                     	;# 
   125  0213                     	;# 
   126  0214                     	;# 
   127  0214                     	;# 
   128  0215                     	;# 
   129  0215                     	;# 
   130  0215                     	;# 
   131  0216                     	;# 
   132  0216                     	;# 
   133  0217                     	;# 
   134  0217                     	;# 
   135  0291                     	;# 
   136  0291                     	;# 
   137  0292                     	;# 
   138  0293                     	;# 
   139  0294                     	;# 
   140  0295                     	;# 
   141  0295                     	;# 
   142  0296                     	;# 
   143  0391                     	;# 
   144  0392                     	;# 
   145  0393                     	;# 
   146  039A                     	;# 
   147  039C                     	;# 
   148  039D                     	;# 
   149  039E                     	;# 
   150  039F                     	;# 
   151  0FE4                     	;# 
   152  0FE5                     	;# 
   153  0FE6                     	;# 
   154  0FE7                     	;# 
   155  0FE8                     	;# 
   156  0FE9                     	;# 
   157  0FEA                     	;# 
   158  0FEB                     	;# 
   159  0FED                     	;# 
   160  0FEE                     	;# 
   161  0FEF                     	;# 
   162  0000                     	;# 
   163  0001                     	;# 
   164  0002                     	;# 
   165  0003                     	;# 
   166  0004                     	;# 
   167  0005                     	;# 
   168  0006                     	;# 
   169  0007                     	;# 
   170  0008                     	;# 
   171  0009                     	;# 
   172  000A                     	;# 
   173  000B                     	;# 
   174  000C                     	;# 
   175  0011                     	;# 
   176  0012                     	;# 
   177  0015                     	;# 
   178  0016                     	;# 
   179  0016                     	;# 
   180  0017                     	;# 
   181  0018                     	;# 
   182  0019                     	;# 
   183  001A                     	;# 
   184  001B                     	;# 
   185  001C                     	;# 
   186  001E                     	;# 
   187  001F                     	;# 
   188  008C                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  010C                     	;# 
   203  0111                     	;# 
   204  0112                     	;# 
   205  0115                     	;# 
   206  0116                     	;# 
   207  0117                     	;# 
   208  0118                     	;# 
   209  0119                     	;# 
   210  011A                     	;# 
   211  011B                     	;# 
   212  011D                     	;# 
   213  011D                     	;# 
   214  018C                     	;# 
   215  0191                     	;# 
   216  0191                     	;# 
   217  0192                     	;# 
   218  0193                     	;# 
   219  0193                     	;# 
   220  0193                     	;# 
   221  0194                     	;# 
   222  0195                     	;# 
   223  0196                     	;# 
   224  0199                     	;# 
   225  019A                     	;# 
   226  019B                     	;# 
   227  019B                     	;# 
   228  019B                     	;# 
   229  019B                     	;# 
   230  019C                     	;# 
   231  019C                     	;# 
   232  019D                     	;# 
   233  019E                     	;# 
   234  019F                     	;# 
   235  020C                     	;# 
   236  0211                     	;# 
   237  0211                     	;# 
   238  0212                     	;# 
   239  0212                     	;# 
   240  0213                     	;# 
   241  0213                     	;# 
   242  0214                     	;# 
   243  0214                     	;# 
   244  0215                     	;# 
   245  0215                     	;# 
   246  0215                     	;# 
   247  0216                     	;# 
   248  0216                     	;# 
   249  0217                     	;# 
   250  0217                     	;# 
   251  0291                     	;# 
   252  0291                     	;# 
   253  0292                     	;# 
   254  0293                     	;# 
   255  0294                     	;# 
   256  0295                     	;# 
   257  0295                     	;# 
   258  0296                     	;# 
   259  0391                     	;# 
   260  0392                     	;# 
   261  0393                     	;# 
   262  039A                     	;# 
   263  039C                     	;# 
   264  039D                     	;# 
   265  039E                     	;# 
   266  039F                     	;# 
   267  0FE4                     	;# 
   268  0FE5                     	;# 
   269  0FE6                     	;# 
   270  0FE7                     	;# 
   271  0FE8                     	;# 
   272  0FE9                     	;# 
   273  0FEA                     	;# 
   274  0FEB                     	;# 
   275  0FED                     	;# 
   276  0FEE                     	;# 
   277  0FEF                     	;# 
   278  009B                     _ADRESL	set	155
   279  009C                     _ADRESH	set	156
   280  009E                     _ADCON1bits	set	158
   281  009D                     _ADCON0bits	set	157
   282  008C                     _TRISA	set	140
   283  0099                     _OSCCONbits	set	153
   284  008C                     _TRISAbits	set	140
   285  0118                     _DACCON0bits	set	280
   286  011D                     _APFCONbits	set	285
   287  018C                     _ANSELAbits	set	396
   288  019A                     _TXREG	set	410
   289  019D                     _RCSTAbits	set	413
   290  019F                     _BAUDCONbits	set	415
   291  019E                     _TXSTAbits	set	414
   292  018C                     _ANSELA	set	396
   293  019B                     _SPBRGL	set	411
   294  019C                     _SPBRGH	set	412
   295  020C                     _WPUAbits	set	524
   296                           
   297                           	psect	cinit
   298  07F6                     start_initialization:	
   299                           ; #config settings
   300                           
   301  07F6                     __initialization:
   302                           
   303                           ; Clear objects allocated to COMMON
   304  07F6  01F0               	clrf	__pbssCOMMON& (0+127)
   305  07F7  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   306  07F8  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   307  07F9  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   308  07FA  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   309  07FB  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   310  07FC  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   311  07FD  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   312  07FE                     end_of_initialization:	
   313                           ;End of C runtime variable initialization code
   314                           
   315  07FE                     __end_of__initialization:
   316  07FE  0020               	movlb	0
   317  07FF  2FAD               	ljmp	_main	;jump to C main() function
   318                           
   319                           	psect	bssCOMMON
   320  0070                     __pbssCOMMON:
   321  0070                     _print_buffer:
   322  0070                     	ds	8
   323                           
   324                           	psect	cstackCOMMON
   325  0078                     __pcstackCOMMON:
   326  0078                     ?_uart_init:
   327  0078                     ??_uart_init:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0078                     ??_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0078                     ?_main:	
   334                           ; 1 bytes @ 0x0
   335                           
   336                           
   337                           ; 2 bytes @ 0x0
   338  0078                     	ds	3
   339  007B                     main@ADCValue:
   340                           
   341                           ; 2 bytes @ 0x3
   342  007B                     	ds	2
   343                           
   344                           	psect	maintext
   345  07AD                     __pmaintext:	
   346 ;;
   347 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   348 ;;
   349 ;; *************** function _main *****************
   350 ;; Defined at:
   351 ;;		line 91 in file "analogRead.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;		None
   354 ;; Auto vars:     Size  Location     Type
   355 ;;  ADCValue        2    3[COMMON] int 
   356 ;; Return value:  Size  Location     Type
   357 ;;                  2   55[None  ] int 
   358 ;; Registers used:
   359 ;;		wreg, status,2, status,0, pclath, cstack
   360 ;; Tracked objects:
   361 ;;		On entry : B1F/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1
   365 ;;      Params:         0       0       0
   366 ;;      Locals:         2       0       0
   367 ;;      Temps:          3       0       0
   368 ;;      Totals:         5       0       0
   369 ;;Total ram usage:        5 bytes
   370 ;; Hardware stack levels required when called: 1
   371 ;; This function calls:
   372 ;;		_uart_init
   373 ;; This function is called by:
   374 ;;		Startup code after reset
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _main
   380  07AD                     _main:
   381  07AD                     l726:	
   382                           ;incstack = 0
   383                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   384                           
   385                           
   386                           ;analogRead.c: 93:     OSCCONbits.SPLLEN = 0;
   387  07AD  0021               	movlb	1	; select bank1
   388  07AE  1399               	bcf	25,7	;volatile
   389  07AF                     l728:
   390                           
   391                           ;analogRead.c: 94:     OSCCONbits.IRCF = 0b1011;
   392  07AF  0819               	movf	25,w	;volatile
   393  07B0  3987               	andlw	-121
   394  07B1  3858               	iorlw	88
   395  07B2  0099               	movwf	25	;volatile
   396                           
   397                           ;analogRead.c: 95:     OSCCONbits.SCS = 0x02;
   398  07B3  0819               	movf	25,w	;volatile
   399  07B4  39FC               	andlw	-4
   400  07B5  3802               	iorlw	2
   401  07B6  0099               	movwf	25	;volatile
   402  07B7                     l730:
   403                           
   404                           ;analogRead.c: 97:     TRISA = 0x00;
   405  07B7  018C               	clrf	12	;volatile
   406  07B8                     l732:
   407                           
   408                           ;analogRead.c: 98:     TRISAbits.TRISA2 = 1;
   409  07B8  150C               	bsf	12,2	;volatile
   410  07B9                     l734:
   411                           
   412                           ;analogRead.c: 100:     DACCON0bits.DACEN = 0;
   413  07B9  0022               	movlb	2	; select bank2
   414  07BA  1398               	bcf	24,7	;volatile
   415  07BB                     l736:
   416                           
   417                           ;analogRead.c: 102:     ANSELAbits.ANSA2 = 1;
   418  07BB  0023               	movlb	3	; select bank3
   419  07BC  150C               	bsf	12,2	;volatile
   420  07BD                     l738:
   421                           
   422                           ;analogRead.c: 104:     ADCON0bits.CHS = 0b00010;
   423  07BD  0021               	movlb	1	; select bank1
   424  07BE  081D               	movf	29,w	;volatile
   425  07BF  3983               	andlw	-125
   426  07C0  3808               	iorlw	8
   427  07C1  009D               	movwf	29	;volatile
   428  07C2                     l740:
   429                           
   430                           ;analogRead.c: 107:     ADCON0bits.ADON = 1;
   431  07C2  141D               	bsf	29,0	;volatile
   432  07C3                     l742:
   433                           
   434                           ;analogRead.c: 108:     ADCON1bits.ADCS = 0x00;
   435  07C3  308F               	movlw	-113
   436  07C4  059E               	andwf	30,f	;volatile
   437  07C5                     l744:
   438                           
   439                           ;analogRead.c: 109:     ADCON1bits.ADFM = 0x01;
   440  07C5  179E               	bsf	30,7	;volatile
   441  07C6                     l746:
   442                           
   443                           ;analogRead.c: 113:     uart_init();
   444  07C6  3187  278F  3187   	fcall	_uart_init
   445  07C9                     l748:
   446                           
   447                           ;analogRead.c: 116:         ADCON0bits.GO = 1;
   448  07C9  0021               	movlb	1	; select bank1
   449  07CA  149D               	bsf	29,1	;volatile
   450  07CB                     l57:	
   451                           ;analogRead.c: 117:         while (ADCON0bits.GO);
   452                           
   453  07CB  189D               	btfsc	29,1	;volatile
   454  07CC  2FCE               	goto	u31
   455  07CD  2FCF               	goto	u30
   456  07CE                     u31:
   457  07CE  2FCB               	goto	l57
   458  07CF                     u30:
   459  07CF                     l750:
   460                           
   461                           ;analogRead.c: 119:         int ADCValue = ADRESH << 8;
   462  07CF  081C               	movf	28,w	;volatile
   463  07D0  00F8               	movwf	??_main
   464  07D1  01F9               	clrf	??_main+1
   465  07D2  0878               	movf	??_main,w
   466  07D3  00F9               	movwf	??_main+1
   467  07D4  01F8               	clrf	??_main
   468  07D5  0878               	movf	??_main,w
   469  07D6  00FB               	movwf	main@ADCValue
   470  07D7  0879               	movf	??_main+1,w
   471  07D8  00FC               	movwf	main@ADCValue+1
   472                           
   473                           ;analogRead.c: 120:         ADCValue = ADCValue + ADRESL;
   474  07D9  081B               	movf	27,w	;volatile
   475  07DA  077B               	addwf	main@ADCValue,w
   476  07DB  00F8               	movwf	??_main
   477  07DC  087C               	movf	main@ADCValue+1,w
   478  07DD  1803               	skipnc
   479  07DE  0A7C               	incf	main@ADCValue+1,w
   480  07DF  00F9               	movwf	??_main+1
   481  07E0  0878               	movf	??_main,w
   482  07E1  00FB               	movwf	main@ADCValue
   483  07E2  0879               	movf	??_main+1,w
   484  07E3  00FC               	movwf	main@ADCValue+1
   485                           
   486                           ;analogRead.c: 121:         TXREG = ADCValue;
   487  07E4  087B               	movf	main@ADCValue,w
   488  07E5  0023               	movlb	3	; select bank3
   489  07E6  009A               	movwf	26	;volatile
   490                           
   491                           ;analogRead.c: 123:         _delay((unsigned long)((200)*(1000000/4000.0)));
   492  07E7  3041               	movlw	65
   493  07E8  00F8               	movwf	??_main
   494  07E9  30EE               	movlw	238
   495  07EA                     u57:
   496  07EA  0B89               	decfsz	9,f
   497  07EB  2FEA               	goto	u57
   498  07EC  0BF8               	decfsz	??_main,f
   499  07ED  2FEA               	goto	u57
   500  07EE  3200               	nop2
   501  07EF                     l60:	
   502                           ;analogRead.c: 128:         while (TXSTAbits.TRMT == 0);
   503                           
   504  07EF  0023               	movlb	3	; select bank3
   505  07F0  1C9E               	btfss	30,1	;volatile
   506  07F1  2FF3               	goto	u41
   507  07F2  2FF4               	goto	u40
   508  07F3                     u41:
   509  07F3  2FEF               	goto	l60
   510  07F4                     u40:
   511  07F4  2FC9               	goto	l748
   512  07F5  2801               	ljmp	start
   513  07F6                     __end_of_main:
   514                           
   515                           	psect	text1
   516  078F                     __ptext1:	
   517 ;; *************** function _uart_init *****************
   518 ;; Defined at:
   519 ;;		line 54 in file "analogRead.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;                  1    wreg      void 
   526 ;; Registers used:
   527 ;;		wreg, status,2
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMMON   BANK0   BANK1
   533 ;;      Params:         0       0       0
   534 ;;      Locals:         0       0       0
   535 ;;      Temps:          0       0       0
   536 ;;      Totals:         0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used: 1
   539 ;; This function calls:
   540 ;;		Nothing
   541 ;; This function is called by:
   542 ;;		_main
   543 ;; This function uses a non-reentrant model
   544 ;;
   545                           
   546                           
   547                           ;psect for function _uart_init
   548  078F                     _uart_init:
   549  078F                     l672:	
   550                           ;incstack = 0
   551                           ; Regs used in _uart_init: [wreg+status,2]
   552                           
   553                           
   554                           ;analogRead.c: 55:     SPBRGH = 25 >> 8;
   555  078F  0023               	movlb	3	; select bank3
   556  0790  019C               	clrf	28	;volatile
   557  0791                     l674:
   558                           
   559                           ;analogRead.c: 56:     SPBRGL = 25 & 0xFF;
   560  0791  3019               	movlw	25
   561  0792  009B               	movwf	27	;volatile
   562  0793                     l676:
   563                           
   564                           ;analogRead.c: 57:     APFCONbits.RXDTSEL = 0;
   565  0793  0022               	movlb	2	; select bank2
   566  0794  139D               	bcf	29,7	;volatile
   567  0795                     l678:
   568                           
   569                           ;analogRead.c: 58:     APFCONbits.TXCKSEL = 0;
   570  0795  111D               	bcf	29,2	;volatile
   571  0796                     l680:
   572                           
   573                           ;analogRead.c: 59:     TRISAbits.TRISA0 = 0;
   574  0796  0021               	movlb	1	; select bank1
   575  0797  100C               	bcf	12,0	;volatile
   576  0798                     l682:
   577                           
   578                           ;analogRead.c: 60:     TRISAbits.TRISA1 = 1;
   579  0798  148C               	bsf	12,1	;volatile
   580  0799                     l684:
   581                           
   582                           ;analogRead.c: 61:     ANSELA = 0;
   583  0799  0023               	movlb	3	; select bank3
   584  079A  018C               	clrf	12	;volatile
   585  079B                     l686:
   586                           
   587                           ;analogRead.c: 62:     WPUAbits.WPUA0 = 1;
   588  079B  0024               	movlb	4	; select bank4
   589  079C  140C               	bsf	12,0	;volatile
   590  079D                     l688:
   591                           
   592                           ;analogRead.c: 63:     WPUAbits.WPUA1 = 1;
   593  079D  148C               	bsf	12,1	;volatile
   594  079E                     l690:
   595                           
   596                           ;analogRead.c: 64:     TXSTAbits.TX9 = 0;
   597  079E  0023               	movlb	3	; select bank3
   598  079F  131E               	bcf	30,6	;volatile
   599  07A0                     l692:
   600                           
   601                           ;analogRead.c: 65:     TXSTAbits.TXEN = 1;
   602  07A0  169E               	bsf	30,5	;volatile
   603  07A1                     l694:
   604                           
   605                           ;analogRead.c: 66:     TXSTAbits.SYNC = 0;
   606  07A1  121E               	bcf	30,4	;volatile
   607  07A2                     l696:
   608                           
   609                           ;analogRead.c: 67:     TXSTAbits.SENDB = 0;
   610  07A2  119E               	bcf	30,3	;volatile
   611  07A3                     l698:
   612                           
   613                           ;analogRead.c: 68:     TXSTAbits.BRGH = 1;
   614  07A3  151E               	bsf	30,2	;volatile
   615  07A4                     l700:
   616                           
   617                           ;analogRead.c: 69:     BAUDCONbits.SCKP = 0;
   618  07A4  121F               	bcf	31,4	;volatile
   619  07A5                     l702:
   620                           
   621                           ;analogRead.c: 70:     BAUDCONbits.BRG16 = 1;
   622  07A5  159F               	bsf	31,3	;volatile
   623  07A6                     l704:
   624                           
   625                           ;analogRead.c: 71:     BAUDCONbits.ABDEN = 0;
   626  07A6  101F               	bcf	31,0	;volatile
   627  07A7                     l706:
   628                           
   629                           ;analogRead.c: 73:     RCSTAbits.RX9 = 0;
   630  07A7  131D               	bcf	29,6	;volatile
   631  07A8                     l708:
   632                           
   633                           ;analogRead.c: 74:     RCSTAbits.CREN = 1;
   634  07A8  161D               	bsf	29,4	;volatile
   635  07A9                     l710:
   636                           
   637                           ;analogRead.c: 75:     RCSTAbits.FERR = 0;
   638  07A9  111D               	bcf	29,2	;volatile
   639  07AA                     l712:
   640                           
   641                           ;analogRead.c: 76:     RCSTAbits.OERR = 0;
   642  07AA  109D               	bcf	29,1	;volatile
   643  07AB                     l714:
   644                           
   645                           ;analogRead.c: 77:     RCSTAbits.SPEN = 1;
   646  07AB  179D               	bsf	29,7	;volatile
   647  07AC                     l43:
   648  07AC  0008               	return
   649  07AD                     __end_of_uart_init:
   650  007E                     btemp	set	126	;btemp
   651  007E                     wtemp0	set	126
   652                           
   653                           	psect	config
   654                           
   655                           ;Config register CONFIG1 @ 0x8007
   656                           ;	Oscillator Selection
   657                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
   658                           ;	Watchdog Timer Enable
   659                           ;	WDTE = OFF, WDT disabled
   660                           ;	Power-up Timer Enable
   661                           ;	PWRTE = OFF, PWRT disabled
   662                           ;	MCLR Pin Function Select
   663                           ;	MCLRE = OFF, MCLR/VPP pin function is digital input
   664                           ;	Flash Program Memory Code Protection
   665                           ;	CP = OFF, Program memory code protection is disabled
   666                           ;	Data Memory Code Protection
   667                           ;	CPD = OFF, Data memory code protection is disabled
   668                           ;	Brown-out Reset Enable
   669                           ;	BOREN = OFF, Brown-out Reset disabled
   670                           ;	Clock Out Enable
   671                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
   672                           ;	Internal/External Switchover
   673                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   674                           ;	Fail-Safe Clock Monitor Enable
   675                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   676  8007                     	org	32775
   677  8007  09A4               	dw	2468
   678                           
   679                           ;Config register CONFIG2 @ 0x8008
   680                           ;	Flash Memory Self-Write Protection
   681                           ;	WRT = OFF, Write protection off
   682                           ;	PLL Enable
   683                           ;	PLLEN = OFF, 4x PLL disabled
   684                           ;	Stack Overflow/Underflow Reset Enable
   685                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
   686                           ;	Brown-out Reset Voltage Selection
   687                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
   688                           ;	Low-Voltage Programming Enable
   689                           ;	LVP = ON, Low-voltage programming enabled
   690  8008                     	org	32776
   691  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      13
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0      30
                                              0 COMMON     5     5      0
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       D       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0       D       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Mar 24 22:17:27 2021

                     l43 07AC                       l60 07EF                       l57 07CB  
                     u30 07CF                       u31 07CE                       u40 07F4  
                     u41 07F3                       u57 07EA                      l700 07A4  
                    l710 07A9                      l702 07A5                      l712 07AA  
                    l704 07A6                      l714 07AB                      l706 07A7  
                    l730 07B7                      l708 07A8                      l740 07C2  
                    l732 07B8                      l750 07CF                      l742 07C3  
                    l734 07B9                      l726 07AD                      l680 0796  
                    l672 078F                      l744 07C5                      l736 07BB  
                    l728 07AF                      l690 079E                      l682 0798  
                    l674 0791                      l746 07C6                      l738 07BD  
                    l692 07A0                      l684 0799                      l676 0793  
                    l748 07C9                      l694 07A1                      l686 079B  
                    l678 0795                      l696 07A2                      l688 079D  
                    l698 07A3                      wreg 0009                     _main 07AD  
                   btemp 007E                     start 0001                    ?_main 0078  
                  _TRISA 008C                    _TXREG 019A                    wtemp0 007E  
        __initialization 07F6             __end_of_main 07F6                   ??_main 0078  
                 _ADRESH 009C                   _ADRESL 009B                   _ANSELA 018C  
                 _SPBRGH 019C                   _SPBRGL 019B  __end_of__initialization 07FE  
         __pcstackCOMMON 0078               __pmaintext 07AD       __size_of_uart_init 001E  
                __ptext1 078F     end_of_initialization 07FE        __end_of_uart_init 07AD  
              _RCSTAbits 019D                _TRISAbits 008C              _DACCON0bits 0118  
              _TXSTAbits 019E              _BAUDCONbits 019F      start_initialization 07F6  
            __pbssCOMMON 0070                ___latbits 0000                _uart_init 078F  
             _ADCON0bits 009D               _ADCON1bits 009E                 _WPUAbits 020C  
             _APFCONbits 011D               ?_uart_init 0078               _ANSELAbits 018C  
          __size_of_main 0049               _OSCCONbits 0099             main@ADCValue 007B  
            ??_uart_init 0078             _print_buffer 0070  
